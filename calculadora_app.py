import streamlit as st
import math
import pandas as pd
from PIL import Image

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Calculadora Python v1.0",
    page_icon="üßÆ",
    layout="centered",  # Mudado para centered conforme solicitado
    initial_sidebar_state="expanded"
)

# Fun√ß√£o para aplicar estilo CSS personalizado
def local_css():
    st.markdown("""
        <style>
        .main {
            padding: 2rem;
        }
        .stButton>button {
            width: 100%;
            margin-top: 1rem;
        }
        .operation-card {
            padding: 1.5rem;
            border-radius: 10px;
            background-color: #f0f2f6;
            margin-bottom: 1rem;
        }
        .result-card {
            padding: 2rem;
            border-radius: 10px;
            background-color: #e6ffe6;
            margin-top: 2rem;
            text-align: center;
        }
        .documentation {
            padding: 1.5rem;
            border-radius: 10px;
            background-color: #f8f9fa;
            margin-bottom: 1rem;
        }
        .sidebar-text {
            font-size: 0.8em;
            color: #888;
            margin-top: 20px;
            text-align: center;
        }
        .main-title {
            text-align: center;
            color: #1E88E5;
            margin-bottom: 30px;
        }
        </style>
    """, unsafe_allow_html=True)

# Fun√ß√µes matem√°ticas
def soma(a, b): return a + b
def subtracao(a, b): return a - b
def multiplicacao(a, b): return a * b
def divisao(a, b): return a / b if b != 0 else "Erro: Divis√£o por zero!"
def potencia(a, b): return a ** b
def raiz_quadrada(a): return math.sqrt(a) if a >= 0 else "Erro: Raiz de n√∫mero negativo!"

# Fun√ß√£o principal da calculadora
def calculadora():
    # Sidebar com navega√ß√£o e cr√©ditos
    with st.sidebar:
        st.title("Navega√ß√£o")
        page = st.radio(
            "Ir para:",
            ["Calculadora", "Sobre o Projeto", "Documenta√ß√£o"]
        )
        
        # Link do desenvolvedor
        st.markdown(
            '<div class="sidebar-text">Projeto desenvolvido por '
            '<a href="https://www.linkedin.com/in/willian-murakami/" target="_blank">Willian Murakami</a></div>',
            unsafe_allow_html=True
        )

    if page == "Calculadora":
        st.markdown('<h1 class="main-title">üßÆ Calculadora Python v1.0</h1>', unsafe_allow_html=True)
        
        # Sele√ß√£o da opera√ß√£o
        operacao = st.selectbox(
            "Escolha a opera√ß√£o:",
            ["Soma (+)", "Subtra√ß√£o (-)", "Multiplica√ß√£o (√ó)", "Divis√£o (√∑)", "Potencia√ß√£o (^)", "Raiz Quadrada (‚àö)"]
        )
        
        # Input dos n√∫meros
        col1, col2 = st.columns(2)
        
        with col1:
            if operacao != "Raiz Quadrada (‚àö)":
                num1 = st.number_input("Primeiro n√∫mero", value=0.0)
            else:
                num1 = st.number_input("N√∫mero", min_value=0.0, value=0.0)
                
        with col2:
            if operacao != "Raiz Quadrada (‚àö)":
                num2 = st.number_input("Segundo n√∫mero", value=0.0)
        
        # C√°lculo e exibi√ß√£o do resultado
        if st.button("Calcular", use_container_width=True):
            with st.container():
                st.markdown('<div class="result-card">', unsafe_allow_html=True)
                
                if operacao == "Soma (+)":
                    resultado = soma(num1, num2)
                    st.markdown(f"### {num1} + {num2} = {resultado}")
                elif operacao == "Subtra√ß√£o (-)":
                    resultado = subtracao(num1, num2)
                    st.markdown(f"### {num1} - {num2} = {resultado}")
                elif operacao == "Multiplica√ß√£o (√ó)":
                    resultado = multiplicacao(num1, num2)
                    st.markdown(f"### {num1} √ó {num2} = {resultado}")
                elif operacao == "Divis√£o (√∑)":
                    resultado = divisao(num1, num2)
                    st.markdown(f"### {num1} √∑ {num2} = {resultado}")
                elif operacao == "Potencia√ß√£o (^)":
                    resultado = potencia(num1, num2)
                    st.markdown(f"### {num1} ^ {num2} = {resultado}")
                else:  # Raiz Quadrada
                    resultado = raiz_quadrada(num1)
                    st.markdown(f"### ‚àö{num1} = {resultado}")
                
                st.markdown('</div>', unsafe_allow_html=True)
    
    elif page == "Sobre o Projeto":
        st.markdown('<h1 class="main-title">üìñ Sobre o Projeto</h1>', unsafe_allow_html=True)
        
        st.write("""
        ### A Jornada de Aprendizado com Cursor IA
        
        Este projeto nasceu como uma "brincadeira" durante meu processo de aprendizado da Cursor IA, 
        uma nova e poderosa IDE que integra intelig√™ncia artificial ao desenvolvimento de software. 
        A ideia era pegar um dos exerc√≠cios mais b√°sicos e tradicionais no aprendizado de programa√ß√£o 
        - a calculadora - e ver at√© onde poder√≠amos ir com o aux√≠lio desta ferramenta incr√≠vel.
        
        #### üéØ A Experi√™ncia
        O que come√ßou como uma simples calculadora de linha de comando se transformou em uma aplica√ß√£o 
        web moderna e profissional, demonstrando o poder da integra√ß√£o entre criatividade humana e 
        intelig√™ncia artificial.
        
        #### üõ†Ô∏è Evolu√ß√£o do Projeto
        1. **Vers√£o Inicial**: Uma calculadora b√°sica em linha de comando
        2. **Explora√ß√£o do Cursor IA**: Descoberta das capacidades da ferramenta
        3. **Transforma√ß√£o**: Evolu√ß√£o para uma aplica√ß√£o web com Streamlit
        4. **Refinamento**: Adi√ß√£o de interface moderna e documenta√ß√£o detalhada
        5. **Deploy**: Disponibiliza√ß√£o na nuvem atrav√©s do Streamlit Cloud
        
        #### üí° Aprendizados
        - Como potencializar o desenvolvimento usando IA
        - Transforma√ß√£o de conceitos b√°sicos em produtos profissionais
        - Integra√ß√£o de diferentes tecnologias modernas
        - Processo completo de desenvolvimento e deploy
        """)
        
    elif page == "Documenta√ß√£o":
        st.markdown('<h1 class="main-title">üìö Documenta√ß√£o</h1>', unsafe_allow_html=True)
        
        st.write("""
        ### O Processo com Cursor IA
        
        Aqui est√° um registro detalhado de como o projeto evoluiu usando a Cursor IA:
        
        #### 1Ô∏è‚É£ Primeiro Prompt
        ```
        "Crie uma calculadora em Python com opera√ß√µes b√°sicas e interface de linha de comando"
        ```
        Resultado: Obtive um c√≥digo base funcional com opera√ß√µes matem√°ticas b√°sicas.
        
        #### 2Ô∏è‚É£ Evolu√ß√£o para Web
        ```
        "Transforme esta calculadora em uma aplica√ß√£o web moderna usando Streamlit, 
        mantendo todas as funcionalidades existentes"
        ```
        Resultado: A calculadora ganhou uma interface web b√°sica com Streamlit.
        
        #### 3Ô∏è‚É£ Melhorias Visuais
        ```
        "Adicione uma barra lateral para navega√ß√£o, melhore o layout visual e 
        inclua minha marca pessoal no projeto"
        ```
        Resultado: Interface moderna com navega√ß√£o, documenta√ß√£o e branding pessoal.
        
        #### 4Ô∏è‚É£ Documenta√ß√£o e Deploy
        ```
        "Crie uma documenta√ß√£o detalhada do processo de desenvolvimento e 
        prepare o projeto para deploy no Streamlit Cloud"
        ```
        Resultado: Documenta√ß√£o completa e projeto pronto para deploy.
        
        ### üöÄ Deploy no Streamlit Cloud
        
        1. Reposit√≥rio criado no GitHub
        2. Conta configurada no Streamlit Cloud
        3. Conex√£o estabelecida com o reposit√≥rio
        4. Deploy realizado com sucesso
        
        ### üìÅ Estrutura Final do Projeto
        ```
        Calculadora_Cursor_IA/
        ‚îú‚îÄ‚îÄ calculadora_app.py    # Aplica√ß√£o principal
        ‚îú‚îÄ‚îÄ requirements.txt      # Depend√™ncias
        ‚îú‚îÄ‚îÄ README.md            # Documenta√ß√£o
        ‚îî‚îÄ‚îÄ .gitignore           # Configura√ß√£o Git
        ```
        """)

# Execu√ß√£o principal
def main():
    local_css()
    calculadora()

if __name__ == "__main__":
    main() 