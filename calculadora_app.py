import streamlit as st
import math
import pandas as pd
from PIL import Image

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Calculadora Python",
    page_icon="üßÆ",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Fun√ß√£o para aplicar estilo CSS personalizado
def local_css():
    st.markdown("""
        <style>
        .main {
            padding: 2rem;
        }
        .stButton>button {
            width: 100%;
            margin-top: 1rem;
        }
        .operation-card {
            padding: 1.5rem;
            border-radius: 10px;
            background-color: #f0f2f6;
            margin-bottom: 1rem;
        }
        .result-card {
            padding: 2rem;
            border-radius: 10px;
            background-color: #e6ffe6;
            margin-top: 2rem;
            text-align: center;
        }
        .documentation {
            padding: 1.5rem;
            border-radius: 10px;
            background-color: #f8f9fa;
            margin-bottom: 1rem;
        }
        </style>
    """, unsafe_allow_html=True)

# Fun√ß√µes matem√°ticas
def soma(a, b): return a + b
def subtracao(a, b): return a - b
def multiplicacao(a, b): return a * b
def divisao(a, b): return a / b if b != 0 else "Erro: Divis√£o por zero!"
def potencia(a, b): return a ** b
def raiz_quadrada(a): return math.sqrt(a) if a >= 0 else "Erro: Raiz de n√∫mero negativo!"

# Fun√ß√£o principal da calculadora
def calculadora():
    st.title("üßÆ Calculadora Python")
    
    # Tabs para navega√ß√£o
    tab1, tab2 = st.tabs(["Calculadora", "Documenta√ß√£o"])
    
    with tab1:
        st.markdown("### Realize seus c√°lculos de forma simples e r√°pida!")
        
        # Sele√ß√£o da opera√ß√£o
        operacao = st.selectbox(
            "Escolha a opera√ß√£o desejada:",
            [
                "Soma (+)",
                "Subtra√ß√£o (-)",
                "Multiplica√ß√£o (√ó)",
                "Divis√£o (√∑)",
                "Potencia√ß√£o (^)",
                "Raiz Quadrada (‚àö)"
            ]
        )
        
        # Input dos n√∫meros
        col1, col2 = st.columns(2)
        
        with col1:
            if operacao != "Raiz Quadrada (‚àö)":
                num1 = st.number_input("Primeiro n√∫mero", value=0.0)
            else:
                num1 = st.number_input("N√∫mero", min_value=0.0, value=0.0)
                
        with col2:
            if operacao != "Raiz Quadrada (‚àö)":
                num2 = st.number_input("Segundo n√∫mero", value=0.0)
        
        # C√°lculo e exibi√ß√£o do resultado
        if st.button("Calcular", use_container_width=True):
            with st.container():
                st.markdown('<div class="result-card">', unsafe_allow_html=True)
                
                if operacao == "Soma (+)":
                    resultado = soma(num1, num2)
                    st.markdown(f"### {num1} + {num2} = {resultado}")
                    
                elif operacao == "Subtra√ß√£o (-)":
                    resultado = subtracao(num1, num2)
                    st.markdown(f"### {num1} - {num2} = {resultado}")
                    
                elif operacao == "Multiplica√ß√£o (√ó)":
                    resultado = multiplicacao(num1, num2)
                    st.markdown(f"### {num1} √ó {num2} = {resultado}")
                    
                elif operacao == "Divis√£o (√∑)":
                    resultado = divisao(num1, num2)
                    st.markdown(f"### {num1} √∑ {num2} = {resultado}")
                    
                elif operacao == "Potencia√ß√£o (^)":
                    resultado = potencia(num1, num2)
                    st.markdown(f"### {num1} ^ {num2} = {resultado}")
                    
                else:  # Raiz Quadrada
                    resultado = raiz_quadrada(num1)
                    st.markdown(f"### ‚àö{num1} = {resultado}")
                
                st.markdown('</div>', unsafe_allow_html=True)
    
    with tab2:
        st.markdown("## Sobre o Projeto")
        
        st.markdown("""
        ### üìù Descri√ß√£o
        
        Esta calculadora foi desenvolvida como parte do curso de Python, utilizando tecnologias modernas
        e pr√°ticas de desenvolvimento profissionais. O projeto demonstra a aplica√ß√£o pr√°tica de conceitos
        de programa√ß√£o e a cria√ß√£o de interfaces web interativas.
        
        ### üõ†Ô∏è Tecnologias Utilizadas
        
        - **Python**: Linguagem de programa√ß√£o principal
        - **Streamlit**: Framework para cria√ß√£o de aplica√ß√µes web
        - **Cursor IDE**: Ambiente de desenvolvimento integrado com IA
        - **Git**: Sistema de controle de vers√£o
        
        ### üí° Funcionalidades
        
        - Opera√ß√µes matem√°ticas b√°sicas
        - Interface intuitiva e responsiva
        - Tratamento de erros
        - Documenta√ß√£o integrada
        
        ### ü§ñ Desenvolvimento com IA
        
        O projeto foi desenvolvido com o aux√≠lio do Cursor IDE, que utiliza intelig√™ncia artificial para:
        
        1. **Sugest√µes de c√≥digo**: Autocompletar e sugerir melhores pr√°ticas
        2. **Debugging**: Identifica√ß√£o e corre√ß√£o de erros
        3. **Documenta√ß√£o**: Gera√ß√£o de coment√°rios e documenta√ß√£o
        4. **Refatora√ß√£o**: Sugest√µes de melhorias no c√≥digo
        
        ### üìä Estrutura do Projeto
        
        ```
        calculadora/
        ‚îú‚îÄ‚îÄ calculadora_app.py    # Aplica√ß√£o principal
        ‚îú‚îÄ‚îÄ requirements.txt      # Depend√™ncias
        ‚îî‚îÄ‚îÄ README.md            # Documenta√ß√£o
        ```
        
        ### üéØ Objetivos Alcan√ßados
        
        1. Criar uma interface amig√°vel para usu√°rios leigos
        2. Implementar todas as opera√ß√µes matem√°ticas b√°sicas
        3. Fornecer feedback claro sobre erros
        4. Documentar o processo de desenvolvimento
        
        ### üîÑ Processo de Desenvolvimento
        
        1. **Planejamento**: Defini√ß√£o de requisitos e funcionalidades
        2. **Desenvolvimento**: Implementa√ß√£o com aux√≠lio de IA
        3. **Testes**: Verifica√ß√£o de funcionalidades e usabilidade
        4. **Documenta√ß√£o**: Registro do processo e instru√ß√µes de uso
        
        ### üåü Pr√≥ximos Passos
        
        - Adicionar mais opera√ß√µes matem√°ticas
        - Implementar hist√≥rico de c√°lculos
        - Adicionar temas personaliz√°veis
        - Criar vers√£o mobile
        """)

# Execu√ß√£o principal
def main():
    local_css()
    calculadora()

if __name__ == "__main__":
    main() 